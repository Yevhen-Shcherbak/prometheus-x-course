{"version":3,"file":"static/js/975.e3980e3b.chunk.js","mappings":"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","sources":["Components/Main/ProtectedRoutes/Books/Books.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport BooksContext from \"../../../../Context/BooksContext\";\r\nimport bookNameShortener from \"../../../../project-utils/bookNameShortener\";\r\n\r\nexport default function Books() {\r\n\r\n  const books = useContext(BooksContext);\r\n  \r\n  const [searchFilteredBooks, setSearchFilteredBooks] = useState(books);\r\n  const [priceFilteredBooks, setPriceFilteredBooks] = useState(books);\r\n  const [resultBookList, setResultBookList] = useState(books);\r\n\r\n  useEffect(()=> {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"instant\",\r\n    }, []);\r\n\r\n    setSearchFilteredBooks(books);\r\n    setPriceFilteredBooks(books);\r\n    setResultBookList(books);\r\n  }, [books]);\r\n\r\n  useEffect(()=>{\r\n    const result = priceFilteredBooks.filter(value => searchFilteredBooks.includes(value));\r\n    setResultBookList(result);\r\n  },[searchFilteredBooks, priceFilteredBooks]);\r\n\r\n  const priceBookFilter= (e)=> {\r\n    const chosenDropdownValue = e.target.value;\r\n\r\n    if (chosenDropdownValue === 'Up to $15') {\r\n      const filtered = books.filter(book => book.price < 15);\r\n      setPriceFilteredBooks(filtered);\r\n    } else if (chosenDropdownValue === '$15 - $30') {\r\n      const filtered = books.filter(book => (book.price >= 15 && book.price < 30));\r\n      setPriceFilteredBooks(filtered);\r\n    } else if (chosenDropdownValue === 'Over $30') {\r\n      const filtered = books.filter(book => (book.price >= 30));\r\n      setPriceFilteredBooks(filtered);\r\n    } else {\r\n      const filtered = books;\r\n      setPriceFilteredBooks(filtered);\r\n    }\r\n\r\n  }\r\n\r\n  const searchBookFilter= (e)=> {\r\n    const searchFieldValue = e.target.value.toLowerCase();\r\n    const filtered = (books).filter(book => book.title.toLowerCase().includes(searchFieldValue));\r\n     \r\n    filtered.length !== 0\r\n    ? setSearchFilteredBooks(filtered)\r\n    : setSearchFilteredBooks([])\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Form className=\"pt-2 pt-sm-3 pb-2 pb-sm-3 d-flex justify-content-center flex-wrap w-50 m-auto gap-3\">\r\n        <Row>\r\n          <Col className=\"pb-2 pb-lg-0\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Type to search\"\r\n              className=\" mr-sm-2\"\r\n              onChange={searchBookFilter}\r\n              style={{minWidth: '250px'}}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Form.Select \r\n              aria-label=\"Default select example\" \r\n              onChange={priceBookFilter}\r\n              style={{minWidth: '120px'}}\r\n            >\r\n              <option value=\"Any price\">Any price</option>\r\n              <option value=\"Up to $15\">{'Up to $15'}</option>\r\n              <option value=\"$15 - $30\">{'$15 - $30'}</option>\r\n              <option value=\"Over $30\">{'Over $30'}</option>\r\n            </Form.Select>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Container className=\"d-flex flex-wrap justify-content-center gap-2 gap-sm-4 p-2 p-sm-3 border-top border-secondary border-2\" fluid>\r\n        {resultBookList.length !== 0 ? resultBookList.map((book) => (\r\n          <Card\r\n            className=\"m-0\"\r\n            style={{ width: '18rem' }}\r\n            key={book.id}\r\n          >\r\n            <Nav.Link\r\n              as={NavLink}\r\n              to={`${book.id}`}\r\n              className='d-block p-1 p-sm-0 mt-3'\r\n            >\r\n              <Container\r\n                style={{ maxWidth: '15.5rem', height: '23rem' }}\r\n                className=\"g-0 d-flex align-items-center\"\r\n              >\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src={book.image || require('../../../../assets/imageNotFound.png')}\r\n                  alt=\"BookImg\"\r\n                  className=\"object-fit-fill border border-2 rounded\"\r\n                />\r\n              </Container>\r\n            </Nav.Link>\r\n            <Card.Body>\r\n              <Card.Title className=\"border-top\">\r\n                {bookNameShortener(book.title)}\r\n              </Card.Title>\r\n              <Card.Text\r\n                style={{ height: '3.2rem' }}\r\n                className=\"mb-1 border-bottom\">\r\n                {book.author}\r\n              </Card.Text>\r\n              <Container className=\"g-0 d-flex justify-content-between align-items-center\">\r\n                <Card.Text className=\"h4\">\r\n                  {'$' + book.price}\r\n                </Card.Text>\r\n                <Nav.Link\r\n                  as={NavLink}\r\n                  to={`${book.id}`}\r\n                  className='d-block p-0 mt-3 d-flex'\r\n                >\r\n                  <Button>\r\n                    View\r\n                  </Button>\r\n                </Nav.Link>\r\n              </Container>\r\n            </Card.Body>\r\n          </Card>\r\n          )\r\n        )\r\n        :<div>No books found</div>}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["Books","books","useContext","BooksContext","searchFilteredBooks","setSearchFilteredBooks","useState","priceFilteredBooks","setPriceFilteredBooks","resultBookList","setResultBookList","useEffect","window","scrollTo","top","behavior","result","filter","value","includes","_jsxs","_Fragment","children","_jsx","Form","className","Row","Col","Control","type","placeholder","onChange","e","searchFieldValue","target","toLowerCase","filtered","book","title","length","style","minWidth","Select","chosenDropdownValue","price","Container","fluid","map","Card","width","Nav","Link","as","NavLink","to","concat","id","maxWidth","height","Img","variant","src","image","require","alt","Body","Title","bookNameShortener","Text","author","Button","React","_ref","ref","bsPrefix","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","classNames","displayName"],"sourceRoot":""}