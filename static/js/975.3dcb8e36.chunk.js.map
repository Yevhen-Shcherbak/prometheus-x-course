{"version":3,"file":"static/js/975.3dcb8e36.chunk.js","mappings":"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","sources":["Components/Main/ProtectedRoutes/Books/Books.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Nav from 'react-bootstrap/Nav';\nimport { Container, Form } from \"react-bootstrap\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport BooksContext from \"../../../../Context/BooksContext\";\n\nexport default function Books() {\n\n  const books = useContext(BooksContext);\n  \n  const [searchFilteredBooks, setSearchFilteredBooks] = useState(books);\n  const [priceFilteredBooks, setPriceFilteredBooks] = useState(books);\n  const [resultBookList, setResultBookList] = useState(books);\n\n  useEffect(()=> {\n    window.scrollTo({\n      top: 0,\n      behavior: \"instant\",\n    }, []);\n\n    setSearchFilteredBooks(books);\n    setPriceFilteredBooks(books);\n    setResultBookList(books);\n  }, [books]);\n\n  useEffect(()=>{\n    const result = priceFilteredBooks.filter(value => searchFilteredBooks.includes(value));\n    setResultBookList(result);\n  },[searchFilteredBooks, priceFilteredBooks]);\n\n  const priceBookFilter= (e)=> {\n    const chosenDropdownValue = e.target.value;\n\n    if (chosenDropdownValue === 'Up to $15') {\n      const filtered = books.filter(book => book.price < 15);\n      setPriceFilteredBooks(filtered);\n    } else if (chosenDropdownValue === '$15 - $30') {\n      const filtered = books.filter(book => (book.price >= 15 && book.price < 30));\n      setPriceFilteredBooks(filtered);\n    } else if (chosenDropdownValue === 'Over $30') {\n      const filtered = books.filter(book => (book.price >= 30));\n      setPriceFilteredBooks(filtered);\n    } else {\n      const filtered = books;\n      setPriceFilteredBooks(filtered);\n    }\n\n  }\n\n  const searchBookFilter= (e)=> {\n    const searchFieldValue = e.target.value.toLowerCase();\n    const filtered = (books).filter(book => book.title.toLowerCase().includes(searchFieldValue));\n     \n    filtered.length !== 0\n    ? setSearchFilteredBooks(filtered)\n    : setSearchFilteredBooks([])\n  }\n\n  const bookNameShortener = (string) => {\n    if (string.length >= 24) {\n      let shortenedString = string.substring(0, 24);\n      return shortenedString += '...'\n    }\n    return string;\n  };\n\n  return (\n    <>\n      <Form className=\"pt-2 pt-sm-3 pb-2 pb-sm-3 d-flex justify-content-center flex-wrap w-50 m-auto gap-3\">\n        <Row>\n          <Col className=\"pb-2 pb-lg-0\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Type to search\"\n              className=\" mr-sm-2\"\n              onChange={searchBookFilter}\n              style={{minWidth: '250px'}}\n            />\n          </Col>\n          <Col>\n            <Form.Select \n              aria-label=\"Default select example\" \n              onChange={priceBookFilter}\n              style={{minWidth: '120px'}}\n            >\n              <option value=\"Any price\">Any price</option>\n              <option value=\"Up to $15\">{'Up to $15'}</option>\n              <option value=\"$15 - $30\">{'$15 - $30'}</option>\n              <option value=\"Over $30\">{'Over $30'}</option>\n            </Form.Select>\n          </Col>\n        </Row>\n      </Form>\n      <Container className=\"d-flex flex-wrap justify-content-center gap-2 gap-sm-4 p-2 p-sm-3 border-top border-secondary border-2\" fluid>\n        {resultBookList.length !== 0 ? resultBookList.map((book) => (\n          <Card\n            className=\"m-0\"\n            style={{ width: '18rem' }}\n            key={book.id}\n          >\n            <Nav.Link\n              as={NavLink}\n              to={`${book.id}`}\n              className='d-block p-1 p-sm-0 mt-3'\n            >\n              <Container\n                style={{ maxWidth: '15.5rem', height: '23rem' }}\n                className=\"g-0 d-flex align-items-center\"\n              >\n                <Card.Img\n                  variant=\"top\"\n                  src={book.image || require('../../../../assets/imageNotFound.png')}\n                  alt=\"BookImg\"\n                  className=\"object-fit-fill border border-2 rounded\"\n                />\n              </Container>\n            </Nav.Link>\n            <Card.Body>\n              <Card.Title className=\"border-top\">\n                {bookNameShortener(book.title)}\n              </Card.Title>\n              <Card.Text\n                style={{ height: '3.2rem' }}\n                className=\"mb-1 border-bottom\">\n                {book.author}\n              </Card.Text>\n              <Container className=\"g-0 d-flex justify-content-between align-items-center\">\n                <Card.Text className=\"h4\">\n                  {'$' + book.price}\n                </Card.Text>\n                <Nav.Link\n                  as={NavLink}\n                  to={`${book.id}`}\n                  className='d-block p-0 mt-3 d-flex'\n                >\n                  <Button>\n                    View\n                  </Button>\n                </Nav.Link>\n              </Container>\n            </Card.Body>\n          </Card>\n          )\n        )\n        :<div>No books found</div>}\n      </Container>\n    </>\n  );\n}\n"],"names":["Books","books","useContext","BooksContext","searchFilteredBooks","setSearchFilteredBooks","useState","priceFilteredBooks","setPriceFilteredBooks","resultBookList","setResultBookList","useEffect","window","scrollTo","top","behavior","result","filter","value","includes","bookNameShortener","string","length","shortenedString","substring","_jsxs","_Fragment","children","_jsx","Form","className","Row","Col","Control","type","placeholder","onChange","e","searchFieldValue","target","toLowerCase","filtered","book","title","style","minWidth","Select","chosenDropdownValue","price","Container","fluid","map","Card","width","Nav","Link","as","NavLink","to","concat","id","maxWidth","height","Img","variant","src","image","require","alt","Body","Title","Text","author","Button"],"sourceRoot":""}